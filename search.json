[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "Ch2_EndToEnd",
    "section": "",
    "text": "source\n\nload_housing_data\n\n load_housing_data ()\n\nloads california housing data needed for this project\n\nhousing = load_housing_data()\n\n\nhousing.head()\n\n\n\n\n\n\n\n\nlongitude\nlatitude\nhousing_median_age\ntotal_rooms\ntotal_bedrooms\npopulation\nhouseholds\nmedian_income\nmedian_house_value\nocean_proximity\n\n\n\n\n0\n-122.23\n37.88\n41.0\n880.0\n129.0\n322.0\n126.0\n8.3252\n452600.0\nNEAR BAY\n\n\n1\n-122.22\n37.86\n21.0\n7099.0\n1106.0\n2401.0\n1138.0\n8.3014\n358500.0\nNEAR BAY\n\n\n2\n-122.24\n37.85\n52.0\n1467.0\n190.0\n496.0\n177.0\n7.2574\n352100.0\nNEAR BAY\n\n\n3\n-122.25\n37.85\n52.0\n1274.0\n235.0\n558.0\n219.0\n5.6431\n341300.0\nNEAR BAY\n\n\n4\n-122.25\n37.85\n52.0\n1627.0\n280.0\n565.0\n259.0\n3.8462\n342200.0\nNEAR BAY\n\n\n\n\n\n\n\n\nhousing.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 20640 entries, 0 to 20639\nData columns (total 10 columns):\n #   Column              Non-Null Count  Dtype  \n---  ------              --------------  -----  \n 0   longitude           20640 non-null  float64\n 1   latitude            20640 non-null  float64\n 2   housing_median_age  20640 non-null  float64\n 3   total_rooms         20640 non-null  float64\n 4   total_bedrooms      20433 non-null  float64\n 5   population          20640 non-null  float64\n 6   households          20640 non-null  float64\n 7   median_income       20640 non-null  float64\n 8   median_house_value  20640 non-null  float64\n 9   ocean_proximity     20640 non-null  object \ndtypes: float64(9), object(1)\nmemory usage: 1.6+ MB\n\n\n\nhousing.ocean_proximity.value_counts()\n\nocean_proximity\n&lt;1H OCEAN     9136\nINLAND        6551\nNEAR OCEAN    2658\nNEAR BAY      2290\nISLAND           5\nName: count, dtype: int64\n\n\n\nhousing.describe()\n\n\n\n\n\n\n\n\nlongitude\nlatitude\nhousing_median_age\ntotal_rooms\ntotal_bedrooms\npopulation\nhouseholds\nmedian_income\nmedian_house_value\n\n\n\n\ncount\n20640.000000\n20640.000000\n20640.000000\n20640.000000\n20433.000000\n20640.000000\n20640.000000\n20640.000000\n20640.000000\n\n\nmean\n-119.569704\n35.631861\n28.639486\n2635.763081\n537.870553\n1425.476744\n499.539680\n3.870671\n206855.816909\n\n\nstd\n2.003532\n2.135952\n12.585558\n2181.615252\n421.385070\n1132.462122\n382.329753\n1.899822\n115395.615874\n\n\nmin\n-124.350000\n32.540000\n1.000000\n2.000000\n1.000000\n3.000000\n1.000000\n0.499900\n14999.000000\n\n\n25%\n-121.800000\n33.930000\n18.000000\n1447.750000\n296.000000\n787.000000\n280.000000\n2.563400\n119600.000000\n\n\n50%\n-118.490000\n34.260000\n29.000000\n2127.000000\n435.000000\n1166.000000\n409.000000\n3.534800\n179700.000000\n\n\n75%\n-118.010000\n37.710000\n37.000000\n3148.000000\n647.000000\n1725.000000\n605.000000\n4.743250\n264725.000000\n\n\nmax\n-114.310000\n41.950000\n52.000000\n39320.000000\n6445.000000\n35682.000000\n6082.000000\n15.000100\n500001.000000\n\n\n\n\n\n\n\n\nhousing.hist(bins=50, figsize=(15,10))\n\narray([[&lt;Axes: title={'center': 'longitude'}&gt;,\n        &lt;Axes: title={'center': 'latitude'}&gt;,\n        &lt;Axes: title={'center': 'housing_median_age'}&gt;],\n       [&lt;Axes: title={'center': 'total_rooms'}&gt;,\n        &lt;Axes: title={'center': 'total_bedrooms'}&gt;,\n        &lt;Axes: title={'center': 'population'}&gt;],\n       [&lt;Axes: title={'center': 'households'}&gt;,\n        &lt;Axes: title={'center': 'median_income'}&gt;,\n        &lt;Axes: title={'center': 'median_house_value'}&gt;]], dtype=object)\n\n\n\n\n\n\nsource\n\n\nis_id_in_test_set\n\n is_id_in_test_set (identifier:int, test_ratio:float=0.2)\n\ndetermines whether a given record should qualify as the test set or not\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nidentifier\nint\n\nunique identifier for the record\n\n\ntest_ratio\nfloat\n0.2\nwhat % of the data should be reserved for test\n\n\nReturns\nbool\n\nTrue if the given record should be in the test set\n\n\n\n\nsource\n\n\ncreate_train_test_split\n\n create_train_test_split (data:pandas.core.frame.DataFrame,\n                          test_ratio:float, id_column:str='index')\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndata\nDataFrame\n\nthe original dataset to split\n\n\ntest_ratio\nfloat\n\nhow much of the data should be in the test set\n\n\nid_column\nstr\nindex\nthe column used to create the test and training indices\n\n\nReturns\ntyping.Tuple[pandas.core.frame.DataFrame, pandas.core.frame.DataFrame]\n\ntwo dataframes, one training, one test\n\n\n\n\nsource\n\n\ndescribe_percentiles\n\n describe_percentiles (df:pandas.core.frame.DataFrame,\n                       percentiles:List[float]=None)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\ndataframe containing columns you want profiled\n\n\npercentiles\ntyping.List[float]\nNone\nthe percentiles you want, defaults to showing tails\n\n\nReturns\nDataFrame\n\nreturn the results as a pandas dataframe\n\n\n\n\ndescribe_percentiles(housing_with_id.median_income)\n\ncount    20640.000000\nmean         3.870671\nstd          1.899822\nmin          0.499900\n0%           0.499900\n5%           1.600570\n10%          1.903800\n25%          2.563400\n50%          3.534800\n75%          4.743250\n90%          6.159210\n95%          7.300305\n97.5%        8.470930\n99%         10.596540\n99.9%       15.000100\nmax         15.000100\nName: median_income, dtype: float64"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "hands_on_ml_learn",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "hands_on_ml_learn",
    "section": "Install",
    "text": "Install\npip install hands_on_ml_learn"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "hands_on_ml_learn",
    "section": "How to use",
    "text": "How to use\nFill me in please! Donâ€™t forget code examples:\n\n\"call load_housing_data() to get the sample housing data for chapter 2\"\n\n'call load_housing_data() to get the sample housing data for chapter 2'"
  }
]